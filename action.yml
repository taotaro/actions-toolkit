name: 'Build Image To AliCloud Container Registry'
description: 'Build Image To AliCloud Container Registry'
inputs:
  access-key-id:
    description: 'AliCloud Access Key'
    required: false
    default: ''
  access-key-secret:
    description: 'AliCloud Secret Key'
    required: false
    default: ''
  region-id:
    description: 'AliCloud Region Id'
    required: false
    default: 'cn-hongkong'
  sae-config-map-id:
    description: 'SAE ConfigMap ID'
    required: false
    default: ''
  env_vars:
    description: "List of environment variables to pass to Docker build"
    required: false
  final_image_url:
    description: "Final Docker image URL including tag"
    required: true

branding:
  color: 'green'
  icon: 'anchor'

runs:
  using: composite
  steps:
    # 使用 SAE 配置项 ID 获取配置项
    - name: Node.js environment setup
      if: ${{ inputs.sae-config-map-id != '' }}
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Load SAE ConfigMap
      if: ${{ inputs.sae-config-map-id != '' }}
      # 保持运行目录在 action 内，否则会在项目目录中查找脚本
      working-directory: ${{ github.action_path }}
      env:
        ALIYUN_ACCESS_KEY_ID: ${{ inputs.access-key-id }}
        ALIYUN_ACCESS_KEY_SECRET: ${{ inputs.access-key-secret }}
        REGION: ${{ inputs.region-id }}
        SAE_CONFIG_MAP_ID: ${{ inputs.sae-config-map-id }}
      run: node dist/index.js
      shell: bash

    # 初始化 Docker 工具
    - name: Set up Docker BuildX
      uses: docker/setup-buildx-action@v3.6.1
      with:
        driver: docker-container  # 使用 docker-container 驱动
        install: true

    # 编译并提交镜像到ACR
    - name: Build and Push Docker Image To ACR
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        FINAL_IMAGE_URL: ${{ inputs.final_image_url }}
        PROJECT_ROOT_DIR: ${{ github.workspace }}
      run: sh entrypoint.sh

